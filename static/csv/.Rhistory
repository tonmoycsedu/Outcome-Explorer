semPaths(fit,what="paths",whatLabels="par",style="lisrel",layout="tree",rotation=2)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
df = read.csv("diabetes.csv")
str(df)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI
Outcome ~ lt1 + lt2'
fit<-sem(model,data=df)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI
lt2 ~ lt1
Outcome ~ lt1 + lt2'
fit<-sem(model,data=df)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI
Outcome ~ lt1 + lt2'
fit<-sem(model,data=df)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI
Outcome ~ lt1 + lt2
Glucose ~~ BloodPressure+SkinThickness+Insulin+BMI'
fit<-sem(model,data=df)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI
Outcome ~ lt1 + lt2
'
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
fit<-sem(model,data=df)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI
lt3 =~ Insulin+ BMI
Outcome ~ lt1 + lt2+ lt3
'
fit<-sem(model,data=df)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI+Age
#lt3 =~ Insulin+ BMI
Outcome ~ lt1 + lt2
'
fit<-sem(model,data=df)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI+Age+DiabetesPedigreeFunction
#lt3 =~ Insulin+ BMI
Outcome ~ lt1 + lt2
'
fit<-sem(model,data=df)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI+Age+DiabetesPedigreeFunction
lt3 =~ Insulin+ BMI
Outcome ~ lt1 + lt2
'
fit<-sem(model,data=df)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI+Age+DiabetesPedigreeFunction
#lt3 =~ Insulin+ BMI
Outcome ~ lt1 + lt2
'
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
fit<-sem(model,data=df)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'lt1 =~ Pregnancies+Age
lt2 =~ Glucose+BloodPressure+SkinThickness+Insulin+BMI+DiabetesPedigreeFunction
#lt3 =~ Insulin+ BMI
Outcome ~ lt1 + lt2
'
fit<-sem(model,data=df)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'acad_skill =~ cgpa+gre+toefl
aptitude =~ sop+lor
admit ~ acad_skill + aptitude + research'
fit<-sem(model,data=df)
fit<-sem(model,data=d)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'acad_skill =~ cgpa+gre+toefl
aptitude =~ sop+lor+research
admit ~ acad_skill + aptitude'
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
fit<-sem(model,data=d)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
fitted(fit)
scaled.d <- scale(d)
colMeans(scaled.d)
fit<-sem(model,data=scaled.d)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
fitted(fit)
fit<-sem(model,data=d)
fitted(fit)
cov2cor(fitted(fit))
vcov(fit)
fitted(fit)
names(d)
getCov(fitted(fit),c=("cgpa","gre","toefl","sop","lor","research","admit"))
getCov(fitted(fit),names=c("cgpa","gre","toefl","sop","lor","research","admit"))
cv <- getCov(fitted(fit),names=c("cgpa","gre","toefl","sop","lor","research","admit"))
cv <- getCov(fitted(fit),names = c("cgpa","gre","toefl","sop","lor","research","admit"))
cv <- getCov(fitted(fit))
cd
cv
cov2cor(cv)
lower <- fitted(fit)
llower
lower
lower$cov
cv <- getCov(fitted(fit)$cov)
char2num(lower$cov)
cv <- char2num(lower$cov)
cv
cov2cor(cv)
cv
cv$V
cv
lower$cov
cv <- lower$cov
View(cv)
cov2cor(lower$cov)
cor(d)
cov2cor(lower$cov)
model<-'acad_skill =~ cgpa+gre+toefl
aptitude =~ sop+lor+research+cgpa
admit ~ acad_skill + aptitude'
fit<-sem(model,data=d)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'acad_skill =~ cgpa+gre+toefl
aptitude =~ sop+lor+cgpa
admit ~ acad_skill + aptitude+ research'
fit<-sem(model,data=d)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'acad_skill =~ cgpa+gre+toefl
aptitude =~ sop+lor+research+cgpa
admit ~ acad_skill + aptitude'
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
fit<-sem(model,data=d)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'admit ~ cgpa+gre+toefl+sop+lor+research'
fit<-sem(model,data=d)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
model<-'acad_skill =~ cgpa+gre+toefl
aptitude =~ sop+lor+research+cgpa
admit ~ acad_skill + aptitude'
fit<-sem(model,data=d)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths,style="lisrel",layout="tree",rotation=2)
semPaths(fit,what="paths",whatLabels="par",style="lisrel",layout="tree",rotation=2)
semPaths(fit,what="paths",whatLabels="par",style="lisrel",layout="tree",rotation=2)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
semPaths(fit,what="paths",whatLabels="est",style="lisrel",layout="tree",rotation=2)
cv <- getCov(fitted(fit)$cov)
cv <- getCov(fitted(fit))
cv
cv$V
lower <- fitted(fit)
lower$cov
cov(d)
cov2cor(lower$cov)
diab <- read.csv("diabetes.csv")
names(diab)
mod <- 'skin_bmi =~ SkinThickness + BMI
motherhood =~ Pregnancies+Age
motherhood ~ BloodPressure
skin_bmi ~ BloodPressure + DiabetesPedigreeFunction+ Insulin
DiabetesPedigreeFunction ~ Insulin
Outcome ~ motherhood + skin_bmi+DiabetesPedigreeFunction+Glucose
Insulin ~~ Glucose
'
fit<-sem(mod,data=diab)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
mod <- 'skin_bmi =~ SkinThickness + BMI
motherhood =~ Pregnancies+Age
motherhood ~ BloodPressure
skin_bmi ~ BloodPressure + DiabetesPedigreeFunction+ Insulin
DiabetesPedigreeFunction ~ Insulin
Outcome ~ motherhood + skin_bmi+DiabetesPedigreeFunction+Glucose
'
fit<-sem(mod,data=diab)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
mod <- 'skin_bmi =~ SkinThickness + BMI
motherhood =~ Pregnancies+Age
motherhood ~ BloodPressure
skin_bmi ~ BloodPressure + DiabetesPedigreeFunction+ Insulin
DiabetesPedigreeFunction ~ Insulin
Outcome ~ motherhood + skin_bmi+DiabetesPedigreeFunction+Glucose
Insulin ~~ Glucose
'
fit<-sem(mod,data=diab)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
mod <- 'skin_bmi =~ SkinThickness + BMI
motherhood =~ Pregnancies+Age
motherhood ~ BloodPressure
skin_bmi ~ BloodPressure + DiabetesPedigreeFunction+ Insulin
DiabetesPedigreeFunction ~ Insulin
Outcome ~ motherhood + skin_bmi+DiabetesPedigreeFunction+Glucose
Insulin ~~ Glucose
'
lower <- fitted(fit)
cov2cor(lower$cov)
lower$cov
cov(daib)
cov(diab)
cor(diab)
cov2cor(lower$cov)
mod
mod <- 'skin_bmi =~ SkinThickness + BMI
mod
fit<-sem(mod,data=diab)
library(lavaan)
fit<-sem(mod,data=diab)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
library(semPlot)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
mod
print(mod)
boston <- read.csv("boston_housing.csv")
names(boston)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS'
library(semPlot)
library(lavaan)
fit<-sem(bos_mod,data=boston)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
summary(fit)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
lower <- fitted(fit)
lower$cov
cov2cor(lower$cov)
cor(boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+TAX'
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+TAX'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE'
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE
PTRATIO ~ ZN+ MED_PRICE'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
cv <- cov2cor(lower$cov)
cv[0]
cor(boston)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE'
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
lower <- fitted(fit)
cv <- cov2cor(lower$cov)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree",rotation=2)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
semPaths(fit,what="paths",whatLabels="std",style="lisrel")
semPaths(fit,what="paths",whatLabels="std")
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
ACCESSIBILTY_TO_HWY ~ CRIME_RATE
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY
CRIME_RATE ~ LOWER_STATUS
DISTANCE_FROM_CITY ~ INDUS
ZN ~ DISTANCE_FROM_CITY
ACCESSIBILTY_TO_HWY ~ CRIME_RATE
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+PTRATIO'
bos_mod1 <- ' lt1 =~ ZN+INDUS+NOX+PERCENTAGE_OLD_HOUSE+DISTANCE_FROM_CITY
lt2 =~ CRIME_RATE+ACCESSIBILTY_TO_HWY+TAX
lt3 =~ ROOM_PER_DWELLING+PTRATIO+LOWER_STATUS
MED_PRICE ~ lt1+lt2+lt3'
fit<-sem(bos_mod1,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod1 <- ' lt1 =~ ZN+INDUS+NOX+PERCENTAGE_OLD_HOUSE+DISTANCE_FROM_CITY
lt2 =~ CRIME_RATE+ACCESSIBILTY_TO_HWY+TAX
lt3 =~ ROOM_PER_DWELLING+PTRATIO+LOWER_STATUS
lt3 ~ lt1+lt2
MED_PRICE ~ lt1+lt2+lt3'
fit<-sem(bos_mod1,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod1 <- ' lt1 =~ ZN+INDUS+NOX+PERCENTAGE_OLD_HOUSE+DISTANCE_FROM_CITY
lt2 =~ CRIME_RATE+ACCESSIBILTY_TO_HWY+TAX
lt3 =~ ROOM_PER_DWELLING+PTRATIO+LOWER_STATUS
lt3 ~ lt1+lt2
MED_PRICE ~ lt1+lt2+lt3+RIVER_BOUND'
fit<-sem(bos_mod1,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
lower <- fitted(fit)
cv <= lower$cov
cv <- lower$cov
bos_mod1 <- ' lt1 =~ ZN+INDUS+NOX+PERCENTAGE_OLD_HOUSE+DISTANCE_FROM_CITY
lt2 =~ CRIME_RATE+ACCESSIBILTY_TO_HWY+TAX
lt3 =~ ROOM_PER_DWELLING+PTRATIO+LOWER_STATUS
lt3 ~ lt1
lt2 ~ lt1
MED_PRICE ~ lt1+lt2+lt3+RIVER_BOUND'
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
fit<-sem(bos_mod1,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
bos_mod1 <- ' lt1 =~ ZN+INDUS+NOX+PERCENTAGE_OLD_HOUSE+DISTANCE_FROM_CITY
lt2 =~ CRIME_RATE+ACCESSIBILTY_TO_HWY+TAX+ROOM_PER_DWELLING+PTRATIO+LOWER_STATUS
lt2 ~ lt1
MED_PRICE ~ lt1+lt2+RIVER_BOUND'
fit<-sem(bos_mod1,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod1 <- ' lt1 =~ ZN+INDUS+NOX+PERCENTAGE_OLD_HOUSE+DISTANCE_FROM_CITY
lt2 =~ CRIME_RATE+ACCESSIBILTY_TO_HWY+TAX
lt3 =~ ROOM_PER_DWELLING+PTRATIO+LOWER_STATUS
lt3 ~ lt1
lt2 ~ lt1
MED_PRICE ~ lt1+lt2+lt3+RIVER_BOUND'
fit<-sem(bos_mod1,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
cov(boston)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS+CRIME_RATE
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY+DISTANCE_FROM_CITY
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+PTRATIO'
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
fit<-sem(bos_mod1,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
semPaths(fit,what="paths",whatLabels="std",style="lisrel",layout="tree")
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS+CRIME_RATE
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY+DISTANCE_FROM_CITY
ZN ~ DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+PTRATIO'
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS+CRIME_RATE
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY+DISTANCE_FROM_CITY
ZN ~ DISTANCE_FROM_CITY
PTRATIO ~ ZN
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+PTRATIO'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS+CRIME_RATE
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY+DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+PTRATIO'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS+CRIME_RATE
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY+DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+PTRATIO+TAX'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
lower <- fitted(fit)
lower$lambda
inspect(fit,what="std")
inspect(fit,what="std")$beta
install.packages("bnlearn")
library(bnlearn)                       # Load the package in R
library(forecast)
data(gaussian.test)
training.set = gaussian.test[1:4000, ] # This is training set to learn the parameters
test.set = gaussian.test[4001:4010, ]  # This is test set to give as evidence
res = hc(training.set)                 # learn BN structure on training set data
fitted = bn.fit(res, training.set)     # learning of parameters
pred = predict(fitted, "C", test.set)  # predicts the value of node C given test set
cbind(pred, test.set[, "C"])           # compare the actual and predicted
accuracy(f = pred, x = test.set[, "C"])
install.packages("forecast")
library(bnlearn)                       # Load the package in R
library(forecast)
data(gaussian.test)
training.set = gaussian.test[1:4000, ] # This is training set to learn the parameters
test.set = gaussian.test[4001:4010, ]  # This is test set to give as evidence
res = hc(training.set)                 # learn BN structure on training set data
fitted = bn.fit(res, training.set)     # learning of parameters
pred = predict(fitted, "C", test.set)  # predicts the value of node C given test set
cbind(pred, test.set[, "C"])           # compare the actual and predicted
accuracy(f = pred, x = test.set[, "C"])
coefficients(fitted$F)
hc(boston)
R> subset(boston, select=-c(KEY))
R <- subset(boston, select=-c(KEY))
R <- subset(boston, select=-c('KEY'))
subset(boston, select=-c('KEY'))
boston <- read.csv("boston_housing.csv")
hc(boston)
boston <- read.csv("boston_housing.csv")
hc(boston)
hc(boston)
boston <- read.csv("boston_housing.csv")
hc(boston)
hc(boston)
boston <- read.csv("boston_housing.csv")
hc(boston)
pdag <- hc(boston)
pdag
pdag <- imab(boston)
pdag <- iamb(boston)
pdag
boston <- read.csv("boston_housing.csv")
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS+CRIME_RATE
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY+DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+PTRATIO+TAX'
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
bos_mod <- 'PERCENTAGE_OLD_HOUSE ~ NOX+DISTANCE_FROM_CITY
LOWER_STATUS ~ PERCENTAGE_OLD_HOUSE+ROOM_PER_DWELLING+INDUS+CRIME_RATE
TAX ~ INDUS+ ACCESSIBILTY_TO_HWY
INDUS ~ NOX+ ACCESSIBILTY_TO_HWY+DISTANCE_FROM_CITY
MED_PRICE ~ ROOM_PER_DWELLING+LOWER_STATUS+CRIME_RATE+PTRATIO+TAX
PERCENTAGE_OLD_HOUSE ~~ LOWER_STATUS+TAX+INDUS+MED_PRICE
LOWER_STATUS ~~ TAX+INDUS+MED_PRICE
TAX ~~ INDUS+MED_PRICE
INDUS ~~ MED_PRICE'
fit<-sem(bos_mod,data=boston)
summary(fit,fit.measures=TRUE,standardized=TRUE,rsquare=TRUE)
